{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/synergy/app/javascript/react/components/ChampionTile.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { Card, Image, Icon, List, Header, Grid, Transition, Dimmer, Segment, Responsive, Label } from 'semantic-ui-react';\n\nvar ChampionTile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChampionTile, _Component);\n\n  function ChampionTile(props) {\n    var _this;\n\n    _classCallCheck(this, ChampionTile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChampionTile).call(this, props));\n    _this.state = {\n      isHovered: false\n    };\n    _this.onHover = _this.onHover.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ChampionTile, [{\n    key: \"onHover\",\n    value: function onHover(event) {\n      if (this.state.isHovered === false) {\n        this.setState({\n          isHovered: true\n        });\n      } else if (this.state.isHovered === true) {\n        this.setState({\n          isHovered: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pathToIcon = require.context('../../../../public/icons', true);\n\n      var pathToSplashart = require.context('../../../../public/splasharts', true);\n\n      var pathToAbility = require.context('../../../../public/abilities', true);\n\n      var gridId;\n      var cardId;\n      var cardExtraId;\n\n      if (this.state.isHovered === false) {\n        gridId = 'champion-column';\n        cardId = 'champion-card';\n        cardExtraId = 'champion-card-extra';\n      } else {\n        gridId = 'champion-column-hovered';\n        cardId = 'champion-card-hovered';\n        cardExtraId = 'champion-card-extra-hovered';\n      }\n\n      return [React.createElement(Responsive, Object.assign({\n        as: Grid.Column,\n        id: gridId\n      }, Responsive.onlyMobile, {\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Card, {\n        id: cardId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: \"\".concat(pathToSplashart(this.props.champion.icon, true)),\n        onClick: function onClick(event) {\n          return _this2.onHover(event);\n        },\n        label: {\n          color: \"\".concat(this.props.champion.tier_color),\n          content: \"\".concat(this.props.champion.tier),\n          icon: 'dollar sign',\n          ribbon: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        extra: true,\n        id: cardExtraId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.champion.name)))), React.createElement(Responsive, Object.assign({\n        as: Grid.Column,\n        id: gridId,\n        width: \"2\"\n      }, Responsive.onlyComputer, {\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Card, {\n        id: cardId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: \"\".concat(pathToSplashart(this.props.champion.icon, true)),\n        onMouseEnter: function onMouseEnter(event) {\n          return _this2.onHover(event);\n        },\n        onMouseLeave: function onMouseLeave(event) {\n          return _this2.onHover(event);\n        },\n        label: {\n          color: \"\".concat(this.props.champion.tier_color),\n          content: \"\".concat(this.props.champion.tier),\n          icon: 'dollar sign',\n          ribbon: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        extra: true,\n        id: cardExtraId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.champion.name))))];\n    }\n  }]);\n\n  return ChampionTile;\n}(Component);\n\nexport default ChampionTile;","map":{"version":3,"sources":["/Users/anthony/synergy/app/javascript/react/components/ChampionTile.js"],"names":["React","Component","Card","Image","Icon","List","Header","Grid","Transition","Dimmer","Segment","Responsive","Label","ChampionTile","props","state","isHovered","onHover","bind","event","setState","pathToIcon","require","context","pathToSplashart","pathToAbility","gridId","cardId","cardExtraId","Column","onlyMobile","champion","icon","color","tier_color","content","tier","ribbon","name","onlyComputer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Image, Icon, List, Header, Grid, Transition, Dimmer, Segment, Responsive, Label } from 'semantic-ui-react';\n\nclass ChampionTile extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      isHovered: false,\n    }\n    this.onHover = this.onHover.bind(this)\n  }\n\n  onHover(event){\n    if(this.state.isHovered === false) {\n      this.setState({ isHovered: true })\n    } else if(this.state.isHovered === true) {\n      this.setState({ isHovered: false })\n    }\n  }\n\n  render(){\n    const pathToIcon = require.context('../../../../public/icons', true);\n    const pathToSplashart = require.context('../../../../public/splasharts', true);\n    const pathToAbility = require.context('../../../../public/abilities', true);\n\n    let gridId;\n    let cardId;\n    let cardExtraId;\n    if(this.state.isHovered === false) {\n      gridId = 'champion-column';\n      cardId = 'champion-card';\n      cardExtraId = 'champion-card-extra';\n    } else {\n      gridId = 'champion-column-hovered';\n      cardId = 'champion-card-hovered';\n      cardExtraId = 'champion-card-extra-hovered';\n    }\n\n    return [\n      <Responsive as={Grid.Column} id={gridId} {...Responsive.onlyMobile} key='1'>\n        <Card id={cardId}>\n          <Image src={`${pathToSplashart(this.props.champion.icon , true)}`} onClick={event => this.onHover(event)} label={{ color: `${this.props.champion.tier_color}`, content: `${this.props.champion.tier}`, icon: 'dollar sign', ribbon: true }} />\n          <Card.Content extra id={cardExtraId}><Header as='p'>{this.props.champion.name}</Header></Card.Content>\n        </Card>\n      </Responsive>,\n      <Responsive as={Grid.Column} id={gridId} width='2' {...Responsive.onlyComputer} key='2'>\n        <Card id={cardId}>\n          <Image src={`${pathToSplashart(this.props.champion.icon , true)}`} onMouseEnter={event => this.onHover(event)} onMouseLeave={event => this.onHover(event)} label={{ color: `${this.props.champion.tier_color}`, content: `${this.props.champion.tier}`, icon: 'dollar sign', ribbon: true }} />\n          <Card.Content extra id={cardExtraId}><Header as='p'>{this.props.champion.name}</Header></Card.Content>\n        </Card>\n      </Responsive>\n    ];\n  }\n}\n\nexport default ChampionTile;\n"]},"metadata":{},"sourceType":"module"}