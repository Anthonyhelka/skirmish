{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/synergy/app/javascript/react/components/SynergyTile.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { Divider, Container, Popup } from 'semantic-ui-react';\nimport ChampionTile from './ChampionTile';\n\nvar SynergyTile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SynergyTile, _Component);\n\n  function SynergyTile(props) {\n    _classCallCheck(this, SynergyTile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SynergyTile).call(this, props));\n  }\n\n  _createClass(SynergyTile, [{\n    key: \"render\",\n    value: function render() {\n      this.props.synergy.champions.sort(function (a, b) {\n        return parseFloat(a.tier) - parseFloat(b.tier);\n      });\n      var champions = this.props.synergy.champions.map(function (champion) {\n        return React.createElement(ChampionTile, {\n          key: champion.id,\n          id: champion.id,\n          champion: champion,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n      });\n      var upgradeConditional;\n\n      if (this.props.synergy.upgrade_3_number !== null) {\n        upgradeConditional = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, this.props.synergy.upgrade_1_number, \"\\xA0\\xA0\", this.props.synergy.upgrade_1_description), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, this.props.synergy.upgrade_2_number, \"\\xA0\\xA0\", this.props.synergy.upgrade_2_description), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, this.props.synergy.upgrade_3_number, \"\\xA0\\xA0\", this.props.synergy.upgrade_3_description));\n      } else if (this.props.synergy.upgrade_2_number !== null) {\n        upgradeConditional = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, this.props.synergy.upgrade_1_number, \"\\xA0\\xA0\", this.props.synergy.upgrade_1_description), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, this.props.synergy.upgrade_2_number, \"\\xA0\\xA0\", this.props.synergy.upgrade_2_description));\n      } else if (this.props.synergy.upgrade_1_number !== null) {\n        upgradeConditional = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, this.props.synergy.upgrade_1_number, \"\\xA0\\xA0\", this.props.synergy.upgrade_1_description));\n      } else {\n        upgradeConditional = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }\n\n      var pathToSynergyIcon = require.context('../../../../public/synergies', true);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        on: \"click\",\n        inverted: true,\n        wide: true,\n        position: \"top center\",\n        hideOnScroll: true,\n        basic: true,\n        trigger: React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: \"\".concat(pathToSynergyIcon(this.props.synergy.icon, true)),\n          alt: \"\".concat(this.props.synergy.icon),\n          avatar: true,\n          verticalAlign: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), this.props.synergy.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: \"\".concat(pathToSynergyIcon(this.props.synergy.icon, true)),\n        alt: \"\".concat(this.props.synergy.name),\n        avatar: true,\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"synergy-popup-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.synergy.description), upgradeConditional))), React.createElement(List, {\n        horizontal: true,\n        size: \"mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, champions)));\n    }\n  }]);\n\n  return SynergyTile;\n}(Component);\n\nexport default SynergyTile;","map":{"version":3,"sources":["/Users/anthony/synergy/app/javascript/react/components/SynergyTile.js"],"names":["React","Component","Divider","Container","Popup","ChampionTile","SynergyTile","props","synergy","champions","sort","a","b","parseFloat","tier","map","champion","id","upgradeConditional","upgrade_3_number","upgrade_1_number","upgrade_1_description","upgrade_2_number","upgrade_2_description","upgrade_3_description","pathToSynergyIcon","require","context","icon","name","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Divider, Container, Popup } from 'semantic-ui-react';\n\nimport ChampionTile from './ChampionTile';\n\nclass SynergyTile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render(){\n\n    this.props.synergy.champions.sort((a, b) => parseFloat(a.tier) - parseFloat(b.tier));\n    let champions = this.props.synergy.champions.map(champion => {\n      return (\n        <ChampionTile\n          key={champion.id}\n          id={champion.id}\n          champion={champion}\n        />\n      )\n    });\n\n    let upgradeConditional;\n    if (this.props.synergy.upgrade_3_number !== null) {\n      upgradeConditional = (<div><Divider /><span>{this.props.synergy.upgrade_1_number}&nbsp;&nbsp;{this.props.synergy.upgrade_1_description}</span><br /><span>{this.props.synergy.upgrade_2_number}&nbsp;&nbsp;{this.props.synergy.upgrade_2_description}</span><br /><span>{this.props.synergy.upgrade_3_number}&nbsp;&nbsp;{this.props.synergy.upgrade_3_description}</span></div>)\n    } else if (this.props.synergy.upgrade_2_number !== null) {\n      upgradeConditional = (<div><Divider /><span>{this.props.synergy.upgrade_1_number}&nbsp;&nbsp;{this.props.synergy.upgrade_1_description}</span><br /><span>{this.props.synergy.upgrade_2_number}&nbsp;&nbsp;{this.props.synergy.upgrade_2_description}</span></div>)\n    } else if (this.props.synergy.upgrade_1_number !== null) {\n      upgradeConditional = (<div><Divider /><span>{this.props.synergy.upgrade_1_number}&nbsp;&nbsp;{this.props.synergy.upgrade_1_description}</span></div>)\n    } else {\n      upgradeConditional = (<span></span>)\n    }\n\n    const pathToSynergyIcon = require.context('../../../../public/synergies', true);\n\n    return (\n      <div>\n        <Container fluid textAlign='center'>\n\n          <Popup on='click' inverted={true} wide position='top center' hideOnScroll={true} basic={true} trigger={<Header><Image src={`${pathToSynergyIcon(this.props.synergy.icon , true)}`} alt={`${this.props.synergy.icon}`} avatar verticalAlign='middle' /><br />{this.props.synergy.name}</Header>} >\n            <Grid textAlign='center'>\n              <Grid.Row>\n                <Header>\n                  <Image src={`${pathToSynergyIcon(this.props.synergy.icon , true)}`} alt={`${this.props.synergy.name}`} avatar verticalAlign='middle' />\n                </Header>\n              </Grid.Row>\n              <Grid.Row>\n                <span id='synergy-popup-description'>{this.props.synergy.description}</span>\n                {upgradeConditional}\n              </Grid.Row>\n            </Grid>\n          </Popup>\n\n          <List horizontal size='mini'>\n            {champions}\n          </List>\n\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default SynergyTile;\n"]},"metadata":{},"sourceType":"module"}