{"ast":null,"code":"function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n!function (e, t) {\n  \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"object\" == (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? exports[\"react-twitch-embed-video\"] = t() : e[\"react-twitch-embed-video\"] = t();\n}(\"undefined\" != typeof self ? self : this, function () {\n  return webpackJsonpreact_twitch_embed_video([1], [function (e, t, n) {\n    \"use strict\";\n\n    function o(e, t) {\n      if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n\n    function i(e, t) {\n      if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !t || \"object\" != _typeof(t) && \"function\" != typeof t ? e : t;\n    }\n\n    function r(e, t) {\n      if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(t));\n      e.prototype = Object.create(t && t.prototype, {\n        constructor: {\n          value: e,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n    }\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var a = n(1),\n        s = n.n(a),\n        c = n(4),\n        d = n.n(c),\n        u = n(7),\n        l = n.n(u),\n        p = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var o = t[n];\n          o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n        }\n      }\n\n      return function (t, n, o) {\n        return n && e(t.prototype, n), o && e(t, o), t;\n      };\n    }(),\n        f = function (e) {\n      function t() {\n        var e, n, r, a;\n        o(this, t);\n\n        for (var s = arguments.length, c = Array(s), d = 0; d < s; d++) {\n          c[d] = arguments[d];\n        }\n\n        return n = r = i(this, (e = t.__proto__ || Object.getPrototypeOf(t)).call.apply(e, [this].concat(c))), r.state = {\n          embed: null\n        }, a = n, i(r, a);\n      }\n\n      return r(t, e), p(t, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var e = this;\n          if (l.a.Twitch && l.a.Twitch.Embed) this.embed = new l.a.Twitch.Embed(this.props.targetClass, Object.assign({}, this.props)), this._addEventListeners();else {\n            var t = document.createElement(\"script\");\n            t.setAttribute(\"src\", \"https://embed.twitch.tv/embed/v1.js\"), t.addEventListener(\"load\", function () {\n              e.embed = new l.a.Twitch.Embed(e.props.targetClass, Object.assign({}, e.props)), e._addEventListeners();\n            }), document.body.appendChild(t);\n          }\n        }\n      }, {\n        key: \"UNSAFE_componentWillReceiveProps\",\n        value: function value(e) {\n          var t = this.props.channel !== e.channel,\n              n = this.props.layout !== e.layout;\n\n          if (t || n) {\n            document.getElementById(e.targetClass).innerHTML = \"\", this.embed = null, this.embed = new window.Twitch.Embed(this.props.targetClass, Object.assign({}, e));\n          }\n        }\n      }, {\n        key: \"_addEventListeners\",\n        value: function value() {\n          this.embed.addEventListener(l.a.Twitch.Embed.AUTHENTICATE, function (e) {\n            this.props.onUserLogin && this.props.onUserLogin(e);\n          }.bind(this)), this.embed.addEventListener(l.a.Twitch.Embed.VIDEO_PLAY, function (e) {\n            this.props.onVideoPlay && this.props.onVideoPlay(e);\n          }.bind(this)), this.embed.addEventListener(l.a.Twitch.Embed.VIDEO_READY, function () {\n            var e = this.props,\n                t = e.autoplay,\n                n = e.muted,\n                o = this.embed.getPlayer();\n            n && o.setVolume(0), !1 === t && o.pause(), this.props.onPlayerReady && this.props.onPlayerReady(o);\n          }.bind(this));\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          return s.a.createElement(\"div\", {\n            id: this.props.targetClass\n          });\n        }\n      }]), t;\n    }(a.PureComponent);\n\n    f.propTypes = {\n      targetClass: d.a.string,\n      channel: d.a.string.isRequired,\n      video: d.a.string.isRequired,\n      width: d.a.oneOfType([d.a.string, d.a.number]),\n      height: d.a.oneOfType([d.a.string, d.a.number]),\n      allowfullscreen: d.a.bool,\n      autoplay: d.a.bool,\n      chat: d.a.oneOf([\"default\", \"mobile\"]),\n      collection: d.a.string,\n      layout: d.a.string,\n      muted: d.a.bool,\n      theme: d.a.string,\n      onUserLogin: d.a.func,\n      onVideoPlay: d.a.func,\n      onPlayerReady: d.a.func\n    }, f.defaultProps = {\n      targetClass: \"twitch-embed\",\n      width: \"940\",\n      height: \"480\",\n      autoplay: !0,\n      muted: !1\n    }, t[\"default\"] = f;\n  }], [0]);\n});","map":null,"metadata":{},"sourceType":"module"}